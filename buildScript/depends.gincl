ext {

  apache_lib = [':commons-fileupload',
                     ':commons-io-2.4',
                     ':commons-httpclient',
                     ':commons-codec',
                     ':commons-lang',
                     ':commons-logging',
                     ':jackrabbit-webdav-2.8.0',
                     ':commons-discovery',
                     ':commons-csv-1.0-201209']

  webservices_lib = [':archive_dto_irsa',
                     ':axis',
                     ':archive_dto_votable',
                     ':xbean',
                     ':fits' ]

  ehcache_lib = [':ehcache-2.7.4',
                 ':slf4j-api-1.6.6',
                 ':ehcache-web-2.0.4']

  j2ee_rt_lib = [':wsdl4j-1.5.1',
                 ':jaxrpc',
                 ':saaj',
                 ':activation',
                 ':mail']

  j2ee_lib = [j2ee_rt_lib,
              ':servlet-api',
              ':websocket-api']

  mysql_lib = ':mysql-connector-java-5.1.6-bin'
  starlink_lib = [':rayreg', ':regclient', ':stil']
  xbeanfinder_lib = [':xbean-finder-4.1', ':asm-6.2.1']
  spring_lib = [':spring-beans', ':spring-core', ':spring-jdbc', ':spring-tx', ':spring-web']
  fits_io_lib = [':fits_io']
  junit_lib = [':junit-4.12', ':hamcrest-core-1.3']
  log4j_lib = ':log4j-1.2.14'
  josso_lib = ':josso-ws-1.8.5'
  json_lib = ':json-simple-1.1.1'
  xstream_lib = [':xstream-1.3.1', ':xpp3_min-1.1.4c']
  gwt_lib_rt = [':gwt-servlet', ':gwt-servlet-deps']
  gwt_lib = [ gwt_lib_rt,
             ':gwt-user',
             ':gwt-dev',
             ':gwt-codeserver',
             ':validation-api-1.0.0.GA',
             ':validation-api-1.0.0.GA-sources',
             ':canvas-2.1-r1766',
             ':gwt-incubator-2.1-r1766-striped',
             ':gchart' ]

  firefly_ext_lib = [ ':xstream-gwt', ':simbad_ws' ]

  firefly_lib = [ firefly_ext_lib, ':firefly' ]


  FIREFLY_RUNTIME = fits_io_lib + apache_lib + spring_lib + webservices_lib +
                     log4j_lib + josso_lib + xstream_lib + xbeanfinder_lib +
                     gwt_lib_rt + ehcache_lib + starlink_lib + j2ee_rt_lib + json_lib

  FIREFLY_COMPILE = j2ee_lib + gwt_lib + FIREFLY_RUNTIME
}


dependencies {
  compile fits_io_lib
  compile FIREFLY_COMPILE
  testCompile junit_lib
}

def libPath = "$fireflyPath/jars"

//project.ext.properties.each{ k, v -> println "${k}:${v}\n" }

repositories {
  flatDir {
    name 'firefly_repo'
    dirs  "$libPath/build",
          "$libPath/asm",
          "$libPath/data",
          "$libPath/ehcache",
          "$libPath/fits-io",
          "$libPath/j2ee",
          "$libPath/gwt",
          "$libPath/gwt-incubator",
          "$libPath/jakarta-commons",
          "$libPath/josso",
          "$libPath/json",
          "$libPath/log4j",
          "$libPath/mysql",
          "$libPath/sdss",
          "$libPath/spring",
          "$libPath/starlink",
          "$libPath/test",
          "$libPath/webservices",
          "$libPath/xbean",
          "$libPath/xstream"
  }
}

jar.destinationDir = file ("$rootDir/jars/build")


task buildClient (dependsOn: loadConfig) {

  outputs.upToDateWhen { false }

  doLast {
    def wpBuildDir = "${buildDir}/gwt/${project['app-name']}"

    try {
      def process = "npm version".execute()
    } catch (Exception e) {
      println ">> Task failed due to missing npm package manager which comes bundled with node.js"
      throw new GradleException("Task failed due to missing npm package manager which comes bundled with node.js", e)
    }

    if (!file("webpack.config.js").exists()) {
      println ">> webpack.config.js not found.  Skipping buildClient."
      throw new StopExecutionException("webpack.config.js not found.  Skipping buildClient.")
    }

    if (file("${rootDir}/package.json").exists()) {
      exec {
        workingDir = rootDir
        executable "npm"
        args "install"
      }
    }

    def res = exec {
      environment 'WP_BUILD_DIR': wpBuildDir
      environment 'NODE_ENV': project.env
      executable "npm"
      args 'run', 'build'
    }
    if (res.getExitValue() != 0) {
      throw new GradleException("Fail to build Client")
    }
  }
}

