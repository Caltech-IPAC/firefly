/**
 * @global
 */

/**
 * @global
 * @public
 * @typedef {Object} SpectrumDM - spectrum data model information:  https://ivoa.net/documents/SpectrumDM/20111120/REC-SpectrumDM-1.1-20111120.pdf
 * @prop {DataAxis}  spectralAxis
 * @prop {DataAxis}  fluxAxis
 * @prop {DataAxis}  timeAxis
 * @prop {Object} spectralFrame
 * @prop {Object} derivedRedshift
 * @prop {Object} target
 */



/**
 * @global
 * @public
 * @typedef {Object} ServiceDescriptorInputParam
 *
 * @prop UCD
 * @prop [arraySize] - might be a number if size of an array, or '*', or number if as length of string
 * @prop {string} name - param name
 * @prop {string} type - one of - 'char', 'double', 'float', 'int'
 * @prop [ref]
 * @prop {boolean} optionalParam
 * @prop [colName]
 * @prop {string} value
 * @prop {string} [type[
 * @prop {String} [minValue] - might be a single value or an array of numbers, look at arraySize and type
 * @prop {String} [maxValue] - might be a single value or an array of numbers, look at arraySize and type
 * @prop {String} [options] - a set of options in one string, separated by commas 'op1,op2,op3'
 */


/**
 * @typedef DlAnalysisData
 * @prop {boolean} isThis
 * @prop {boolean} isCounterpart
 * @prop {boolean} isImage
 * @prop {boolean} maybeImage - the file is probably a fits file with an image
 * @prop {boolean} isGrid
 * @prop {boolean} isAux
 * @prop {boolean} isSpectrum
 * @prop {boolean} isCutout
 * @prop {boolean} rBand
 * @prop {boolean} gBand
 * @prop {boolean} bBand
 * @prop {boolean} cisxPrimaryQuery
 * @prop {boolean} cisxConcurrentQuery
 * @prop {boolean} isSimpleImage
 * @prop {boolean} isDownloadOnly
 * @prop {boolean} cutoutFullPair
 * @prop {boolean} usableEntry
 */


/**
 * @typedef DatalinkData
 * @prop {String} description - from description column
 * @prop {String} url - from access_url column
 * @prop {String} contentType - from content_type column
 * @prop {String} contentQualifier - from content_qualifier column
 * @prop {String} semantics - from semantics column
 * @prop {String} localSemantics - from local_semantics column
 * @prop {number} size - from content_length column
 * @prop {number} rowIdx
 * @prop {String} serviceDefRef - from service_def  column
 * @prop {String} labelDLExt - the label, this is an extension to the standard, from label column, only used if defined
 * @prop {String} bandpassNameDLExt- the bandpassName, this is an extension to the standard, from bandpass_name column, only used if defined
 * @prop {ServiceDescriptorDef} serDef
 * @prop {DlAnalysisData} dlAnalysis
 * @prop {Object} relatedDLEntries
 * @prop {object} relatedRows
 * @prop {ObsCoreData} sourceObsCoreData
 * @prop {WorldPt} positionWP if there is a MetaConst.SEARCH_TARGET in datalink table it is propagated here
 * @prop {WorldPt} rowWP if there is a MetaConst.ROW_TARGET in datalink table it is propagated here
 * @prop {String} sRegion if there is a MetaConst.S_REGION in datalink table it is propagated here
 */


/**
 * @typedef ObsCoreData
 *
 * @prop {string} access_format
 * @prop {string} access_url
 * @prop {string} dataproduct_subtype
 * @prop {string} dataproduct_type
 * @prop {string} obs_collection
 * @prop {string} obs_title
 * @prop {string} s_ra
 * @prop {string} s_dec
 * @prop {string} s_region
 */



/**
 * @global
 * @public
 * @typedef {Object} CoordColsDescription
 *
 * @summary And object that describes a pairs of columns in a table that makes up a coordinate
 *
 * @prop {string} type -   content type of the columns, 'center'
 * @prop {string} lonCol - name of the longitudinal column
 * @prop {string} latCol - name of the latitudinal column
 * @prop {number} lonIdx - column index for the longitudinal column
 * @prop {number} latIdx - column index for the latitudinal column
 * @prop {CoordinateSys} csys - the coordinate system to use
 */

/**
 * @global
 * @public
 * @typedef {Object} ColsDescription
 *
 * @summary An object that describe a single column in a table
 *
 * @prop {string} colName - name of the column
 * @prop {number} colIdx - column index for the column
 * @prop {string} unit - unit for the column
 */


/**
 * @global
 * @public
 * @typedef {Object} RegionColDescription
 *
 * @summary An object that describes the column which is ObsCore defined 's_region'
 *
 * @prop {string} type -   content type of the column, 'region'
 * @prop {string} regionCol - name of the column
 * @prop {number} regionIdx - column index for the column
 * @prop {string} unit - unit of the measurement of the region
 */


/**
 * @global
 * @public
 * @typedef {Object} ServiceDescriptorDef
 *
 * @summary The service descriptor info extracted from the table metadata
 *
 * @prop {string} title
 * @prop {string} accessURL
 * @prop {string} standardID
 * @prop {string} ID
 * @prop {TableModel} sdSourceTable - the table where this service descriptor cambe from
 * @prop {string} utype
 * @prop {boolean} allowsInput - use may change the parameter
 * @prop dataLinkTableRowIdx - if defined then this is the row to use from the datalink table
 * @prop {boolean} inputRequired - user must enter something
 * @prop {CISXui} [cisxUI] - names should be one of: HiPS, FOV, hips_initial_ra, hips_initial_dec, moc, examples, hipsCtype1, hipsCtype2
 * @prop {Array.<ServiceDescriptorInputParam>} [cisxTokenSub]
 * @prop {Array.<ServiceDescriptorInputParam>} serDefParams
 * @prop {WorldPt} positionWP if there is a MetaConst.SEARCH_TARGET in datalink table it is propagated here
 * @prop {WorldPt} rowWP if there is a MetaConst.ROW_TARGET in datalink table it is propagated here
 */

/**
 * @global
 * @public
 * @typedef {Array.<ServiceDescriptorInputParam>} CISXui
 *
 * This is a special array of ServiceDescriptorInputParam for building the UI.
 *
 * The field names will include the following:
 *
 * hips_initial_fov, hips_initial_ra, hips_initial_dec, moc_color, moc, data_covers_allsky, hips_frame, examples,
 * polygon_examples, hidden_columns, table_sort_order
 */

/**
 * @global
 * @public
 * @typedef {Object} DataAxis - spectrum data axis, can be one of FluxAxis, TimeAxis, or SpectralAxis
 * @prop {string}  value                 column name containing the axis values
 * @prop {string}  [unit]
 * @prop {string}  [ucd]
 * @prop {string}  [statError]
 * @prop {string}  [statErrLow]
 * @prop {string}  [statErrHigh]
 * @prop {string}  [lowerLimit]
 * @prop {string}  [upperLimit]
 * @prop {string}  [binLow]
 * @prop {string}  [binHigh]
 * @prop {string}  [order]
 * @prop {string}  [relOrder]
 */
