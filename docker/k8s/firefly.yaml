apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: firefly
spec:
  selector:
    matchLabels:
      app: firefly
  replicas: 2 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: firefly
    spec:
      containers:
      - name: firefly
        image: ipac/firefly:k8s
        imagePullPolicy: Always
        resources:
          limits:
            memory: "16Gi"
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /datasets
          name: datasets
        env:
        - name: MANAGER
          value: "TRUE"
        - name: ADMIN_PASSWORD
          value: "lsst"
        - name: FIREFLY_OPTS
          value: "-Dvisualize.fits.search.path=/datasets"
        - name: MAX_JVM_SIZE
          value: "8G"
        - name: DEBUG
          value: "FALSE"
      volumes:
      - name: datasets
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: firefly
spec:
  selector:
    app: firefly
  type: NodePort
  ports:
  - protocol: TCP
    port: 8080 # the port that this service should serve on
    targetPort: 8080
  externalIPs:
    - 134.4.70.136   # irsawebdev9

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: firefly
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
  - hosts: 
    - irsawebdev9.ipac.caltech.edu
    secretName: ""
  rules:
  - host: irsawebdev9.ipac.caltech.edu
    http:
      paths:
      - path: "/firefly"
        backend:
          serviceName: firefly
          servicePort: 8080
      - path: "/manager"
        backend:
          serviceName: firefly
          servicePort: 8080

