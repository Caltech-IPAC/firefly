/* Generated by Joe Chavez using Together */

package edu.caltech.ipac.target;

import java.io.Serializable;
import java.util.Date;

/**
 * AIRE Background Estimates This class contains the inputs and output for the AIRE background estimation API.
 * <BR>
 * Copyright (C) 1999 California Institute of Technology. All rights reserved.<BR>
 * US Government Sponsorship under NASA contract NAS7-918 is acknowledged.
 * <BR>
 * @version $Id: TargetBackgroundEstimates.java,v 1.6 2008/02/13 23:36:06 booth Exp $
 * @author <a href="mailto:jchavez@ipac.caltech.edu?subject=Java Docs">Joe Chavez</a>
 */

 /*
  * modifed the constructor so the dayEnabled is set to true when the day
  * property is set in the constructor .
  * modified the setDays() method, not to set dayEnabled to true since
  * days and day are two different fields.     2/26/2001  -Xiuqin
  * "dates" added  1/29/2008 - Booth
  */
public class TargetBackgroundEstimates extends    LocationAttribute
                                       implements Serializable {

    /**
     * Input Values
     */

    /**
     * J2000 equitorial right acension (dec. deg.) @serial
     */
    private double raJ2000;

    /**
     * J2000 equitorial declination (dec. deg) @serial
     */
    private double decJ2000;


    /**
     * wavelength in microns, > 0.0
     */
    private double wl;

    /**
     * day in range 0.0 to 366.0
     */
    private double day;

    /*
     * year
     */
    private int year = 2004;

    /**
     * Output Values
     */

    /**
     * zodiacal light in MJy/sr
     */
    private double[] zody;

    /**
     * interstellar medium in MJy/sr
     */
    private double[] ism;

    /**
     * cosmic infrared background in MJy/sr
     */
    private double[] cib;

    /**
     * total background in MJy/sr
     */
    private double[] totbg;

    /**
     * warning from func earthsun; -1 or 1, 0 = no warning
     */
    private int ES_warn;

    /**
     * filled
     */
    private double[] days;
    private Date[] dates;

    /**
     * Flag to indicate whether or not the day property contains valid data.
     */
    private boolean dayEnabled;

    /**
     * Default constructor.
     */
    public TargetBackgroundEstimates() {
        super(null);
    }

    /**
     * Input form #2
     */
    public TargetBackgroundEstimates( double raJ2000, double decJ2000, double wl ) {
        super(null);
        this.raJ2000 = raJ2000;
        this.decJ2000 = decJ2000;
        this.wl = wl;
    }


    /**
     * Input form #1
     */
    public TargetBackgroundEstimates( double raJ2000, double decJ2000, double wl, double day) {
        super(null);
        this.raJ2000 = raJ2000;
        this.decJ2000 = decJ2000;
        this.wl = wl;
        this.day = day;
        this.dayEnabled = true;
        this.year = 2004;
    }


    /**
     * Constructor for output form #1
     */
    public TargetBackgroundEstimates( double zody, double ism, double cib, double totbg, int ES_warn ) {
        super(null);
        this.zody = new double[ 1 ];
        this.zody[ 0 ] = zody;
        this.ism = new double[ 1 ];
        this.ism[ 0 ] = ism;
        this.cib = new double[ 1 ];
        this.cib[ 0 ] = cib;
        this.totbg = new double[ 1 ];
        this.totbg[ 0 ] = totbg;
        this.ES_warn = ES_warn;
    }

    /**
     * Constructor for output form #2
     */
    public TargetBackgroundEstimates( double[] days, double[] zody, double[] ism, double[] cib, double[] totbg ) {
        super(null);
        this.days = days;
        this.zody = zody;
        this.ism = ism;
        this.cib = cib;
        this.totbg = totbg;
    }

    /**
     * New Constructor for output form #2
     */
    public TargetBackgroundEstimates( Date[] dates, double[] zody, double[] ism, double[] cib, double[] totbg ) {
        super(null);
        this.dates = dates;
        this.zody = zody;
        this.ism = ism;
        this.cib = cib;
        this.totbg = totbg;
    }


    public TargetBackgroundEstimates(Location l,
                                     TargetBackgroundEstimates tbe) {
        super(l);
        this.raJ2000= tbe.raJ2000;
        this.decJ2000= tbe.decJ2000;
        this.wl= tbe.wl;
        this.day= tbe.day;
        this.year = tbe.year;
        this.zody= tbe.zody;
        this.ism= tbe.ism;
        this.cib= tbe.cib;
        this.totbg= tbe.totbg;
        this.ES_warn= tbe.ES_warn;
        this.days= tbe.days;
        this.dates= tbe.dates;
        this.dayEnabled=  tbe.dayEnabled;
    }

    /**
     * get zodiacal light as an array.
     */
    public double[] getZody() {
        return zody;
    }

    /**
     * set zodiacal light with an array.
     */
    public void setZody( double[] zody ) {
        this.zody = zody;
    }

    /**
     * get right acension
     */
    public double getRaJ2000() {
        return raJ2000;
    }

    /**
     * set right acension
     * @param raJ2000 Right acension in J2000 coordinates
     */
    public void setRaJ2000( double raJ2000 ) {
        this.raJ2000 = raJ2000;
    }

    /**
     * get wavelength
     * @return wavelength
     */
    public double getWl() {
        return wl;
    }

    /**
     * set wavelength
     * @param wl New wavelength
     */
    public void setWl( double wl ) {
        this.wl = wl;
    }

    /**
     * Get declination in J2000
     * @return declination
     */
    public double getDecJ2000() {
        return decJ2000;
    }

    /**
     * Set declination
     * @param decJ2000 Declination in J2000 coordinates
     */
    public void setDecJ2000( double decJ2000 ) {
        this.decJ2000 = decJ2000;
    }

    /**
     * Get day.
     * @return Day
     */
    public double getDay() {
        return day;
    }

    /**
     * Sets the day property. Will also set dayEnabled to 'true'
     * @param day New day value
     */
    public void setDay( double day ) {
        this.day = day;
        this.dayEnabled = true;
    }

    /**
     * Get year.
     * @return Year
     */
    public int getYear() {
        return year;
    }


    /**
     * Set year property.
     */
    public void setYear(int year) {
        this.year = year;
    }


    /**
     * get interstellar medium in MJy/sr
     */
    public double[] getIsm() {
        return ism;
    }

    /**
     * set interstellar medium in MJy/sr
     * @param ism New interstellar medium value
     */
    public void setIsm( double[] ism ) {
        this.ism = ism;
    }

    /**
     * get cosmic infrared background in MJy/sr
     */
    public double[] getCib() {
        return cib;
    }

    /**
     * set cosmic infrared background in MJy/sr
     * @param cib new cib value
     */
    public void setCib( double[] cib ) {
        this.cib = cib;
    }

    /**
     * get total background in MJy/sr
     * @return total background
     */
    public double[] getTotbg() {
        return totbg;
    }

    /**
     * get total background in MJy/sr
     * @param totbg Totdal background as and array
     */
    public void setTotbg( double[] totbg ) {
        this.totbg = totbg;
    }

    /**
     * get warning from func earthsun; -1 or 1, 0 = no warning
     */
    public int getES_warn() {
        return ES_warn;
    }

    /**
     * set warning from func earthsun; -1 or 1, 0 = no warning
     * @param ES_warn
     */
    public void setES_warn( int ES_warn ) {
        this.ES_warn = ES_warn;
    }

    /**
     * get days
     */
    public double[] getDays() {
        return days;
    }

    /**
     * Set the days property.
     * @param days
     */
    public void setDays( double[] days ) {
        this.days = days;
    }

    /**
     * get dates
     */
    public Date[] getDates() {
        return dates;
    }

    /**
     * Set the dates property.
     * @param dates
     */
    public void setDays( Date[] dates ) {
        this.dates = dates;
    }

    /**
     * Returns 'true' if the day property contains valid data, otherwise 'false'.
     */
    public boolean isDayEnabled() {
        return dayEnabled;
    }

    public void setDayEnabled( boolean dayEnabled ) {
        this.dayEnabled = dayEnabled;
    }

    public Object clone() {
        TargetBackgroundEstimates retval= new TargetBackgroundEstimates();
        retval.raJ2000= raJ2000;
        retval.decJ2000= decJ2000;
        retval.wl= wl;
        retval.day= day;
        retval.zody= zody;
        retval.ism= ism;
        retval.cib= cib;
        retval.totbg= totbg;
        retval.ES_warn= ES_warn;
        retval.days= days;
        retval.dates= dates;
        retval.dayEnabled=  dayEnabled;
        return retval;
    }
}

/*
 * THIS SOFTWARE AND ANY RELATED MATERIALS WERE CREATED BY THE CALIFORNIA
 * INSTITUTE OF TECHNOLOGY (CALTECH) UNDER A U.S. GOVERNMENT CONTRACT WITH
 * THE NATIONAL AERONAUTICS AND SPACE ADMINISTRATION (NASA). THE SOFTWARE
 * IS TECHNOLOGY AND SOFTWARE PUBLICLY AVAILABLE UNDER U.S. EXPORT LAWS
 * AND IS PROVIDED AS-IS TO THE RECIPIENT WITHOUT WARRANTY OF ANY KIND,
 * INCLUDING ANY WARRANTIES OF PERFORMANCE OR MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR USE OR PURPOSE (AS SET FORTH IN UNITED STATES UCC 2312-2313)
 * OR FOR ANY PURPOSE WHATSOEVER, FOR THE SOFTWARE AND RELATED MATERIALS,
 * HOWEVER USED.
 *
 * IN NO EVENT SHALL CALTECH, ITS JET PROPULSION LABORATORY, OR NASA BE LIABLE
 * FOR ANY DAMAGES AND/OR COSTS, INCLUDING, BUT NOT LIMITED TO, INCIDENTAL
 * OR CONSEQUENTIAL DAMAGES OF ANY KIND, INCLUDING ECONOMIC DAMAGE OR INJURY TO
 * PROPERTY AND LOST PROFITS, REGARDLESS OF WHETHER CALTECH, JPL, OR NASA BE
 * ADVISED, HAVE REASON TO KNOW, OR, IN FACT, SHALL KNOW OF THE POSSIBILITY.
 *
 * RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE SOFTWARE
 * AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY CALTECH AND NASA FOR
 * ALL THIRD-PARTY CLAIMS RESULTING FROM THE ACTIONS OF RECIPIENT IN THE USE
 * OF THE SOFTWARE.
 */
