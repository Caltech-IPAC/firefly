<project name="webapp build template" basedir=".">
<!-- Project level init file -->
    <property name="build.root" value="${basedir}/../../../../.."/>

    <!-- load init.xml and common.xml -->
    <import file="${build.root}/tools/init.xml"/>

    <!--
    required properties:
        launch.page     - default page
        gwt.module
        gwt.module.conf.file
        app-name        -  application name  ie.. hydra, heritage
        app-src-dir     -  (optional) source directory of the app.  default to:  ${app-name}
        webapp.name     -  the deployed context name of the webapp.  ie "applications/Spitzer/SHA"

-->
    <property name="app-src-dir" value="${app-name}"/>
    <property name="ipac-root" value="edu/caltech/ipac"/>
    <property name="app-src-root" value="${ipac-root}/${app-src-dir}"/>


<!-- set of jars file the web application relies on -->
    <pathconvert pathsep=" " property="runtime.jars.files" refid="webapp.lib">
        <map from="${dev.root.dir}/" to=""/>
    </pathconvert>

    <property name="jar.base" value="${app-src-dir}"/>

<!-- files to include in build -->
    <property name="compile.includes" value="${app-src-root}/**"/>
    <property name="jar.includes" value="${app-src-root}/** resources/**"/>
    <property name="webapp.lib.includes" value="${runtime.jars.files}"/>
    <property name="webapp.lib.dir" value="${dev.root.dir}"/>
    <property name="webapp.classes.dir" value="${dest.dir}/war/${jar.base}/WEB-INF/config"/>
    <property name="webapp.classes.includes" value="logging.properties"/>

    <!--<property name="flatten.dest.dir" value="${dest.dir}/resources"/>-->
    <!--<property name="flatten.resources.includes" value="edu/caltech/ipac/${app-name}/resources/**/*"/>-->
    <property name="resources.includes" value="${app-src-root}/${gwt.module.conf.file}
                                               ${app-src-root}/**/resources/*
                                               ${app-src-root}/**/resources/${app-name}/*"/>

<!-- webapp.war properties -->
    <property name="webapp.dir" value="./public"/>
    <property name="web.xml.file" value="${dest.dir}/war/${jar.base}/WEB-INF/web.xml"/>
    <property name="gwt.module.launch.url" value="${webapp.name}/${launch.page}"/>

    <fileset id="webapp-token-files" dir="${build.root}/src/${ipac-root}">
        <include name="${app-src-dir}/web.xml"/>
        <include name="${app-src-dir}/context.xml"/>
        <include name="${app-src-dir}/public/*.html"/>
        <include name="${app-src-dir}/logging.properties"/>
        <include name="firefly/server/cache/resources/shared_ehcache.xml"/>
        <include name="firefly/server/cache/resources/ignore_sizeof.txt"/>
    </fileset>


    <target name="webapp-build" depends="init, firefly, copy.resources, webapp-setup, compile, gwt.compile, config-build, webapp.war"
            description="build everything.. including the war file"/>

    <target name="webapp-build-dirty" depends="init, firefly, webapp-setup, config-build, webapp.war"
            description="build everything.. including the war file"/>

    <target name="webapp-deploy" depends="config-deploy, Common Build Rules.redeploy"
            description="redeploy configuration files and the application"/>

    <target name="webapp-clean" depends="Common Build Rules.clean, clean.gwt.compile, config-clean"/>

    <target name="run" depends="firefly, compile, gwt.run"
            description="launch Heritage using the GWT shell">
    </target>

    <!--common build targets-->
    <target name="all" depends="webapp-build"/>
    <target name="deploy" depends="webapp-deploy"/>
    <target name="redeploy" depends="webapp-deploy"/>
    <target name="clean" depends="webapp-clean"
            description="clean up the artifacts generated the build"/>
    <!-- ================== -->


    <target name="firefly">
        <ant antfile="${build.root}/src/edu/caltech/ipac/firefly/build.xml" inheritall="false"/>
    </target>

    <target name="webapp-setup" depends="init, war.defaults">
        <fileset id="eval-props-inf" refid="webapp-token-files"/>
        <property name="eval-props-outdir" value="${war.doc.root}/WEB-INF/config/"/>
        <antcall target="eval-props" inheritrefs="true" inheritall="true"/>
        <move overwrite="true" todir="${war.doc.root}" flatten="true">
            <fileset dir="${eval-props-outdir}" includes="${app-src-dir}/public/*.html"/>
        </move>
        <move overwrite="true" todir="${war.doc.root}/WEB-INF" flatten="true">
            <fileset dir="${eval-props-outdir}" includes="${app-src-dir}/web.xml"/>
        </move>
        <move overwrite="true" todir="${war.doc.root}/WEB-INF/config" flatten="true">
            <fileset dir="${eval-props-outdir}" includes="${app-src-dir}/** firefly/**"/>
        </move>
    </target>

</project>
