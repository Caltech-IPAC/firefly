<project name="config build template" default="config-deploy" basedir=".">

<!--
    required properties:
        app-name
        additional-files
        app.config.dir  -   (optional) defaults to ${config.dir}/${app-name}
-->

    <fail unless="app-name" message="app-name is required, but not given"/>

    <property name="webapp.name" value="${app-name}"/>
    <property name="proj-id" value="${app-name}"/>

    <tempfile deleteonexit="true" property="temp.file"/>
    <echo message="${webapp.name}" file="${temp.file}"/>
    <loadfile srcfile="${temp.file}" property="webapp-fname">
        <filterchain>
            <replacestring from="/" to="#"/>
        </filterchain>
    </loadfile>

    <property name="config-src-name" value="${app-name}"/>
    <property name="config-src-dir" value="${build.root}/../config/${config-src-name}"/>
    <property name="env-basedir" value="${config-src-dir}"/>
    <property name="global-config-files" value="project.dtd projectList.dtd"/>
    <property name="config-files" value="app.prop
                                        db.prop
                                        context.xml
                                        ehcache.xml
                                        log4j.properties
                                    "/>

    <import file="${build.root}/tools/init.xml"/>

    <property name="config.dir" value="/hydra/server/config"/>
    <property name="app.config.dir" value="${config.dir}/${app-name}"/>


    <property name="jar-file" value="${webapp-fname}-config.jar"/>

    <fileset id="config-token-files" dir="${config-src-dir}" includes="${config-files} ${additional-files}"/>

    <target name="config-build" depends="init" description="create and jar the configuration files">

        <property name="war.doc.root" value="${dest.dir}/war/${webapp-fname}"/>
        <property name="work-dir" value="${war.doc.root}/WEB-INF/config/"/>

        <mkdir dir="${work-dir}"/>
        <mkdir dir="${work-dir}/configurable"/>

        <copy todir="${work-dir}" overwrite="true">
            <fileset dir="${config-src-dir}" includes="${global-config-files} ${additional-files}"/>
        </copy>

<!--replace token in config file-->
        <fileset id="eval-props-inf" refid="config-token-files"/>
        <property name="eval-props-outdir" value="${work-dir}"/>
        <antcall target="eval-props" inheritrefs="true" inheritall="true"/>

        <copy todir="${war.doc.root}/META-INF/" overwrite="true" file="${work-dir}/context.xml" failonerror="false"/>

<!-- ================================ -->

        <jar basedir="${work-dir}" destfile="${wars.dir}/${jar-file}" includes="${global-config-files} ${additional-files} ${config-files}"/>
    </target>

    <target name="config-deploy" depends="config-build"
            description="setup config files and copy it over to config directory">
        <fail unless="app.config.dir" message="app.config.dir property not set"/>
        <unjar src="${wars.dir}/${jar-file}" dest="${app.config.dir}" overwrite="true"/>
    </target>

    <target name="config-clean">
        <delete dir="${work-dir}" failonerror="false"/>
        <delete file="${wars.dir}/${jar-file}" failonerror="false"/>
    </target>

    <import file="deploy.xml"/>


</project>
