<project name="Deploy webapp" basedir=".">
    <description>
        Deploy a webapp onto a tomcat application server
    </description>

    <target name="redeploy" depends="tomcat-stop, deploy-latest, tomcat-start"/>

    <target name="tomcat-stop">
        <property environment="env"/>
        <echo message="shutdown tomcat..." />
        <exec executable="${env.CATALINA_HOME}/bin/shutdown.sh" failifexecutionfails="true">
            <env key="CATALINA_HOME" value="${env.CATALINA_HOME}"/>
            <env key="CATALINA_BASE" value="${env.CATALINA_BASE}"/>
        </exec>
        <sleep seconds="30"/>
    </target>

    <target name="tomcat-start">
        <property environment="env"/>
        <exec executable="${env.CATALINA_HOME}/bin/startup.sh">
            <env key="CATALINA_HOME" value="${env.CATALINA_HOME}"/>
            <env key="CATALINA_BASE" value="${env.CATALINA_BASE}"/>
        </exec>
        <echo message="starting tomcat..." />
        <sleep seconds="10"/>
    </target>

    <target name="deploy-latest">

        <property environment="env"/>
        <fail unless="artifacts-dir" message="artifacts-dir is not defined"/>
        <fail unless="webapp-fname" message="webapp-fname is not defined"/>
        <fail unless="app.config.dir" message="app.config.dir is not defined"/>
        <fail unless="env.CATALINA_HOME" message="CATALINA_HOME env not defined"/>
        <fail unless="env.CATALINA_BASE" message="CATALINA_BASE env not defined"/>

        <property name="app-name" value="${webapp-fname}"/>

        <pathconvert property="latestDir">
            <first>
                <sort>
                    <dirset dir="${artifacts-dir}" includes="*"/>
                    <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                      <date />
                    </reverse>
                </sort>
            </first>
        </pathconvert>

        <echo message="latest build dir: ${latestDir}" />

        <copy todir="${basedir}" flatten="true">
                <fileset dir="${latestDir}" includes="**/${webapp-fname}*" />
        </copy>

        <available property="war-exists" file="${basedir}/${webapp-fname}.war"/>
        <fail unless="war-exists" message="build directory does not contains war file"/>

        <echo message="removing file: ${env.CATALINA_BASE}/conf/Catalina/localhost/${webapp-fname}.xml"/>
        <delete verbose="true" file="${env.CATALINA_BASE}/conf/Catalina/localhost/${webapp-fname}.xml" failonerror="false"/>
        <delete dir="${env.CATALINA_BASE}/webapps/${webapp-fname}" failonerror="false"/>
        <delete file="${env.CATALINA_BASE}/webapps/${webapp-fname}.war" failonerror="false"/>
        <copy file="${basedir}/${webapp-fname}.war" todir="${env.CATALINA_BASE}/webapps/" flatten="true" failonerror="true"/>
        <unjar src="${basedir}/${webapp-fname}-config.jar" dest="${app.config.dir}" overwrite="true"/>

        <delete dir="${env.CATALINA_BASE}/temp/ehcache/${app-name}" includes="**" failonerror="false"/>
    </target>


    <target name="send-artifacts" description="copy artifacts to remote host">
        <property environment="env"/>

        <property name="art-root" value="/hydra/repos/${app-name}"/>
        <property name="art-dirname" value="v${BuildMajor}.${BuildMinor}.${BuildRev}"/>
        <property name="remote-host" value="irsawebtest1"/>
        <property name="auth-user" value="irsadmin"/>
        <property name="auth-file" value="/home/irsadmin/.ssh/id_rsa"/>

        <sshexec host="${remote-host}"
                 username="${auth-user}"
                 keyfile="${auth-file}"
                 command="mkdir ${art-root}/${art-dirname}" failonerror='false'/>


        <scp todir="${auth-user}@${remote-host}:${art-root}/${art-dirname}"
             keyfile="${auth-file}"
             passphrase="">
            <fileset dir="${wars.dir}">
                <include name="*"/>
            </fileset>
        </scp>

        <sshexec host="${remote-host}"
                 failonerror='false'
                 username="${auth-user}"
                 keyfile="${auth-file}"
                 command="cd ${art-root}; rm current; ln -s ${art-dirname} current"/>

    </target>


</project>
